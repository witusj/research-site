"0","# Create a 3D scatter plot with Plotly with arrows"
"0",""
"0","# Sort the dataframe by 'loss' to find the 5th lowest and the lowest loss"
"0","sorted_df = df.sort_values(by='loss').reset_index(drop=True)"
"0",""
"0","# Create the 3D scatter plot using Plotly Graph Objects"
"0","fig = go.Figure()"
"0",""
"0","# Add scatter plot"
"0","fig.add_trace(go.Scatter3d("
"0","    x=df['x0'], y=df['x1'], z=df['loss'],"
"0","    mode='markers',"
"0","    marker=dict("
"0","        size=10,"
"0","        color=df['loss'],"
"0","        colorscale='matter',"
"0","        showscale=False  # Hide the colorbar)"
"0","    ),"
"0","    text=df['loss'],"
"0","    customdata=df[['x0', 'x1', 'x2']],"
"0","    hovertemplate='[%{x}, %{y}, %{customdata[2]}] - loss = %{text:.2f}',"
"0","))"
"0",""
"1","Figure({
    'data': [{'customdata': array([[0, 0, 6],
                                   [0, 1, 5],
                                   [0, 2, 4],
                                   [0, 3, 3],
                                   [0, 4, 2],
                                   [0, 5, 1],
                                   [0, 6, 0],
                                   [1, 0, 5],
                                   [1, 1, 4],
                                   [1, 2, 3],
                                   [1, 3, 2],
                                   [1, 4, 1],
                                   [1, 5, 0],
                                   [2, 0, 4],
                                   [2, 1, 3],
                                   [2, 2, 2],
                                   [2, 3, 1],
                                   [2, 4, 0],
                                   [3, 0, 3],
                                   [3, 1, 2],
                                   [3, 2, 1],
                                   [3, 3, 0],
                                   [4, 0, 2],
                                   [4, 1, 1],
                                   [4, 2, 0],
                                   [5, 0, 1],
                                   [5, 1, 0],
                                   [6, 0, 0]]),
              'hovertemplate': '[%{x}, %{y}, %{customdata[2]}] - loss = %{text:.2f}',
              'marker': {'color': array([7.575042 , 5.775257 , 5.3437696, 5.5016694, 5.7804692, 6.0780718,
                                         6.3779388, 5.550312 , 4.0687079, 3.803862 , 4.0011079, 4.2881583,
                                         4.5873889, 4.1609077, 3.5362803, 3.6053873, 3.8718309, 4.1696669,
                                         3.7928313, 3.794964 , 4.0417062, 4.3378806, 4.088095 , 4.3264732,
                                         4.6213542, 4.6256505, 4.9200399, 5.2199619]),
                         'colorscale': [[0.0, 'rgb(253, 237, 176)'],
                                        [0.09090909090909091, 'rgb(250, 205,
                                        145)'], [0.18181818181818182, 'rgb(246,
                                        173, 119)'], [0.2727272727272727, 'rgb(240,
                                        142, 98)'], [0.36363636363636365, 'rgb(231,
                                        109, 84)'], [0.45454545454545453, 'rgb(216,
                                        80, 83)'], [0.5454545454545454, 'rgb(195,
                                        56, 90)'], [0.6363636363636364, 'rgb(168,
                                        40, 96)'], [0.7272727272727273, 'rgb(138,
                                        29, 99)'], [0.8181818181818182, 'rgb(107,
                                        24, 93)'], [0.9090909090909091, 'rgb(76,
                                        21, 80)'], [1.0, 'rgb(47, 15, 61)']],
                         'showscale': False,
                         'size': 10},
              'mode': 'markers',
              'text': array([7.575042 , 5.775257 , 5.3437696, 5.5016694, 5.7804692, 6.0780718,
                             6.3779388, 5.550312 , 4.0687079, 3.803862 , 4.0011079, 4.2881583,
                             4.5873889, 4.1609077, 3.5362803, 3.6053873, 3.8718309, 4.1696669,
                             3.7928313, 3.794964 , 4.0417062, 4.3378806, 4.088095 , 4.3264732,
                             4.6213542, 4.6256505, 4.9200399, 5.2199619]),
              'type': 'scatter3d',
              'x': array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
                          4, 5, 5, 6]),
              'y': array([0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 0, 1, 2, 3, 0, 1,
                          2, 0, 1, 0]),
              'z': array([7.575042 , 5.775257 , 5.3437696, 5.5016694, 5.7804692, 6.0780718,
                          6.3779388, 5.550312 , 4.0687079, 3.803862 , 4.0011079, 4.2881583,
                          4.5873889, 4.1609077, 3.5362803, 3.6053873, 3.8718309, 4.1696669,
                          3.7928313, 3.794964 , 4.0417062, 4.3378806, 4.088095 , 4.3264732,
                          4.6213542, 4.6256505, 4.9200399, 5.2199619])}],
    'layout': {'template': '...'}
})
"
"0","# Add red arrows from the 5th lowest loss to the lowest loss point"
"0","for i in range(4):"
"0","    fig.add_trace(go.Scatter3d("
"0","        x=[sorted_df['x0'][i], sorted_df['x0'][i + 1]],"
"0","        y=[sorted_df['x1'][i], sorted_df['x1'][i + 1]],"
"0","        z=[sorted_df['loss'][i], sorted_df['loss'][i + 1]],"
"0","        mode='lines',"
"0","        line=dict(color='red', width=4),"
"0","        showlegend=False"
"0","    ))"
"0","    "
"0","# Update layout"
"0","fig.update_layout("
"0","    title='Solution landscape for schedule with N = {} and T = 3'.format(N),"
"0","    scene=dict("
"0","        xaxis_title='x0',"
"0","        yaxis_title='x1',"
"0","        zaxis_title='loss',"
"0","    ),"
"0","    width=800,"
"0","    height=800,"
"0","    showlegend=False"
"0",")"
"1","Figure({
    'data': [{'customdata': array([[0, 0, 6],
                                   [0, 1, 5],
                                   [0, 2, 4],
                                   [0, 3, 3],
                                   [0, 4, 2],
                                   [0, 5, 1],
                                   [0, 6, 0],
                                   [1, 0, 5],
                                   [1, 1, 4],
                                   [1, 2, 3],
                                   [1, 3, 2],
                                   [1, 4, 1],
                                   [1, 5, 0],
                                   [2, 0, 4],
                                   [2, 1, 3],
                                   [2, 2, 2],
                                   [2, 3, 1],
                                   [2, 4, 0],
                                   [3, 0, 3],
                                   [3, 1, 2],
                                   [3, 2, 1],
                                   [3, 3, 0],
                                   [4, 0, 2],
                                   [4, 1, 1],
                                   [4, 2, 0],
                                   [5, 0, 1],
                                   [5, 1, 0],
                                   [6, 0, 0]]),
              'hovertemplate': '[%{x}, %{y}, %{customdata[2]}] - loss = %{text:.2f}',
              'marker': {'color': array([7.575042 , 5.775257 , 5.3437696, 5.5016694, 5.7804692, 6.0780718,
                                         6.3779388, 5.550312 , 4.0687079, 3.803862 , 4.0011079, 4.2881583,
                                         4.5873889, 4.1609077, 3.5362803, 3.6053873, 3.8718309, 4.1696669,
                                         3.7928313, 3.794964 , 4.0417062, 4.3378806, 4.088095 , 4.3264732,
                                         4.6213542, 4.6256505, 4.9200399, 5.2199619]),
                         'colorscale': [[0.0, 'rgb(253, 237, 176)'],
                                        [0.09090909090909091, 'rgb(250, 205,
                                        145)'], [0.18181818181818182, 'rgb(246,
                                        173, 119)'], [0.2727272727272727, 'rgb(240,
                                        142, 98)'], [0.36363636363636365, 'rgb(231,
                                        109, 84)'], [0.45454545454545453, 'rgb(216,
                                        80, 83)'], [0.5454545454545454, 'rgb(195,
                                        56, 90)'], [0.6363636363636364, 'rgb(168,
                                        40, 96)'], [0.7272727272727273, 'rgb(138,
                                        29, 99)'], [0.8181818181818182, 'rgb(107,
                                        24, 93)'], [0.9090909090909091, 'rgb(76,
                                        21, 80)'], [1.0, 'rgb(47, 15, 61)']],
                         'showscale': False,
                         'size': 10},
              'mode': 'markers',
              'text': array([7.575042 , 5.775257 , 5.3437696, 5.5016694, 5.7804692, 6.0780718,
                             6.3779388, 5.550312 , 4.0687079, 3.803862 , 4.0011079, 4.2881583,
                             4.5873889, 4.1609077, 3.5362803, 3.6053873, 3.8718309, 4.1696669,
                             3.7928313, 3.794964 , 4.0417062, 4.3378806, 4.088095 , 4.3264732,
                             4.6213542, 4.6256505, 4.9200399, 5.2199619]),
              'type': 'scatter3d',
              'x': array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
                          4, 5, 5, 6]),
              'y': array([0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 0, 1, 2, 3, 0, 1,
                          2, 0, 1, 0]),
              'z': array([7.575042 , 5.775257 , 5.3437696, 5.5016694, 5.7804692, 6.0780718,
                          6.3779388, 5.550312 , 4.0687079, 3.803862 , 4.0011079, 4.2881583,
                          4.5873889, 4.1609077, 3.5362803, 3.6053873, 3.8718309, 4.1696669,
                          3.7928313, 3.794964 , 4.0417062, 4.3378806, 4.088095 , 4.3264732,
                          4.6213542, 4.6256505, 4.9200399, 5.2199619])},
             {'line': {'color': 'red', 'width': 4},
              'mode': 'lines',
              'showlegend': False,
              'type': 'scatter3d',
              'x': [2, 2],
              'y': [1, 2],
              'z': [3.5362803000000005, 3.605387300000001]},
             {'line': {'color': 'red', 'width': 4},
              'mode': 'lines',
              'showlegend': False,
              'type': 'scatter3d',
              'x': [2, 3],
              'y': [2, 0],
              'z': [3.605387300000001, 3.7928313000000005]},
             {'line': {'color': 'red', 'width': 4},
              'mode': 'lines',
              'showlegend': False,
              'type': 'scatter3d',
              'x': [3, 3],
              'y': [0, 1],
              'z': [3.7928313000000005, 3.7949640000000002]},
             {'line': {'color': 'red', 'width': 4},
              'mode': 'lines',
              'showlegend': False,
              'type': 'scatter3d',
              'x': [3, 1],
              'y': [1, 2],
              'z': [3.7949640000000002, 3.803862]}],
    'layout': {'height': 800,
               'scene': {'xaxis': {'title': {'text': 'x0'}},
                         'yaxis': {'title': {'text': 'x1'}},
                         'zaxis': {'title': {'text': 'loss'}}},
               'showlegend': False,
               'template': '...',
               'title': {'text': 'Solution landscape for schedule with N = 6 and T = 3'},
               'width': 800}
})
"
"0","fig.write_image(""images/landscape-with-arrows.png"", scale=4)"
"2","Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""[90m]8;line = 3840;file:///Users/witoldtenhove/Documents/Projects/vu/research/experiments/site/.virtualenv/lib/python3.9/site-packages/plotly/basedatatypes.py/Users/witoldtenhove/Documents/Projects/vu/research/experiments/site/.virtualenv/lib/python3.9/site-packages/plotly/basedatatypes.py]8;;[39m"", line 3840, in write_image
    return pio.write_image(self, *args, **kwargs)
  File ""[90m]8;line = 267;file:///Users/witoldtenhove/Documents/Projects/vu/research/experiments/site/.virtualenv/lib/python3.9/site-packages/plotly/io/_kaleido.py/Users/witoldtenhove/Documents/Projects/vu/research/experiments/site/.virtualenv/lib/python3.9/site-packages/plotly/io/_kaleido.py]8;;[39m"", line 267, in write_image
    img_data = to_image(
  File ""[90m]8;line = 133;file:///Users/witoldtenhove/Documents/Projects/vu/research/experiments/site/.virtualenv/lib/python3.9/site-packages/plotly/io/_kaleido.py/Users/witoldtenhove/Documents/Projects/vu/research/experiments/site/.virtualenv/lib/python3.9/site-packages/plotly/io/_kaleido.py]8;;[39m"", line 133, in to_image
    raise ValueError(
ValueError: 
Image export using the ""kaleido"" engine requires the kaleido package,
which can be installed using pip:
    $ pip install -U kaleido
"
"0","fig.show()"
"0",""
